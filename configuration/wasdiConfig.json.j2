{
    "nodeCode": "{{ aoWasdiConfiguration['nodeCode'] }}",
    "mainNodeCloud": "{{ aoWasdiConfiguration['mainNodeCloud'] }}",
    "usersDefaultNode": "{{ aoWasdiConfiguration['usersDefaultNode'] }}",
    "addDateTimeToLogs": {{ aoWasdiConfiguration['addDateTimeToLogs'] | lower }},
    "baseUrl": "{{ aoWasdiConfiguration['baseUrl'] }}",
    "connectionTimeout": {{ aoWasdiConfiguration['connectionTimeout'] }},
    "readTimeout": {{ aoWasdiConfiguration['readTimeout'] }},
    "msWaitAfterChmod": {{ aoWasdiConfiguration['msWaitAfterChmod'] }},
    "shellExecLocally": {{ aoWasdiConfiguration['shellExecLocally'] | lower }},
    "logHttpCalls": {{ aoWasdiConfiguration['logHttpCalls'] | lower }},
    "filterInternalHttpCalls": {{ aoWasdiConfiguration['filterInternalHttpCalls'] | lower }},
    "useLog4J": {{ aoWasdiConfiguration['useLog4J'] | lower }},
    "logLevel": "INFO",
    "logLevelServer": "",
    "logLevelLauncher": "",
    "logLevelScheduler": "",
    "logLevelTrigger": "",
    "addDateTimeToLogs": false,
    "mongoMain": {
        "address": "{{ aoWasdiConfiguration['mongoMain']['address'] }}",
        "dbName": "{{ aoWasdiConfiguration['mongoMain']['dbName'] }}",
        "replicaName": "{{ aoWasdiConfiguration['mongoMain']['replicaName'] }}",
        "user": "{{ aoWasdiConfiguration['mongoMain']['user'] }}",
        "password": "{{ aoWasdiConfiguration['mongoMain']['password'] }}"
    },
    "mongoLocal": {
        "address": "{{ aoWasdiConfiguration['mongoLocal']['address'] }}",
        "dbName": "{{ aoWasdiConfiguration['mongoLocal']['dbName'] }}",
        "replicaName": "{{ aoWasdiConfiguration['mongoLocal']['replicaName'] }}",
        "user": "{{ aoWasdiConfiguration['mongoLocal']['user'] }}",
        "password": "{{ aoWasdiConfiguration['mongoLocal']['password'] }}"
    },
    "mongoEcostress": {
        "address": "{{ aoWasdiConfiguration['mongoEcostress']['address'] }}",
        "dbName": "{{ aoWasdiConfiguration['mongoEcostress']['dbName'] }}",
        "replicaName": "{{ aoWasdiConfiguration['mongoEcostress']['replicaName'] }}",
        "user": "{{ aoWasdiConfiguration['mongoEcostress']['user'] }}",
        "password": "{{ aoWasdiConfiguration['mongoEcostress']['password'] }}"
    },
    "mongoStatistics": {
        "address": "{{ aoWasdiConfiguration['mongoStatistics']['address'] }}",
        "dbName": "{{ aoWasdiConfiguration['mongoStatistics']['dbName'] }}",
        "replicaName": "{{ aoWasdiConfiguration['mongoStatistics']['replicaName'] }}",
        "user": "{{ aoWasdiConfiguration['mongoStatistics']['user'] }}",
        "password": "{{ aoWasdiConfiguration['mongoStatistics']['password'] }}"
    },
    "keycloack": {
        "address": "{{ aoWasdiConfiguration['keycloak']['baseUrl'] }}{{ aoWasdiConfiguration['keycloak']['address'] }}",
        "cliSecret": "{{ aoWasdiConfiguration['keycloak']['cliSecret'] }}",
        "authTokenAddress": "{{ aoWasdiConfiguration['keycloak']['baseUrl'] }}{{ aoWasdiConfiguration['keycloak']['authTokenAddress'] }}",
        "introspectAddress": "{{ aoWasdiConfiguration['keycloak']['baseUrl'] }}{{ aoWasdiConfiguration['keycloak']['introspectAddress'] }}",
        "confidentialClient": "{{ aoWasdiConfiguration['keycloak']['confidentialClient'] }}",
        "client": "{{ aoWasdiConfiguration['keycloak']['client'] }}",
        "clientSecret": "{{ aoWasdiConfiguration['keycloak']['clientSecret'] }}",
        "realm": "{{ aoWasdiConfiguration['keycloak']['realm'] }}",
        "sessionExpireHours": 24
    },
    "metrics": {
        "api": {
            "authentication": {
                "authenticationSystem": "{{ aoWasdiConfiguration['metrics']['api']['authentication']['authenticationSystem'] }}",
                "username": "{{ aoWasdiConfiguration['metrics']['api']['authentication']['username'] }}",
                "password": "{{ aoWasdiConfiguration['metrics']['api']['authentication']['password'] }}",
                "path": "{{ aoWasdiConfiguration['metrics']['api']['authentication']['path'] }}",
                "method": "{{ aoWasdiConfiguration['metrics']['api']['authentication']['method'] }}",
                "timeout": {{ aoWasdiConfiguration['metrics']['api']['authentication']['timeout'] }}
            },
            "endpoint": {
                "path": "{{ aoWasdiConfiguration['metrics']['api']['endpoint']['path'] }}",
                "method": "{{ aoWasdiConfiguration['metrics']['api']['endpoint']['method'] }}",
                "timeout": {{ aoWasdiConfiguration['metrics']['api']['endpoint']['timeout'] }}
            }
        },
        "debug": {{ aoWasdiConfiguration['metrics']['debug'] | lower }},
        "metric": {
{% if aoWasdiConfiguration['metrics']['metric']['license'] | default({}) | length == 0 %}
            "license": {},
{% else %}
            "license": {
{% for sCurrentLicense in aoWasdiConfiguration['metrics']['metric']['license'] %}
                "{{ sCurrentLicense }}": {
                    "hostValue": "{{ sWasdiIdlLicenseServerUrl }}",
{% if aoWasdiConfiguration['metrics']['metric']['license'][sCurrentLicense]['valuesToConsiderTrue'] | length == 0 %}
                    "valuesToConsiderTrue": []
{% else %}
                    "valuesToConsiderTrue": [
{% for sCurrentValueToConsiderTrue in aoWasdiConfiguration['metrics']['metric']['license'][sCurrentLicense]['valuesToConsiderTrue'] %}
                        "{{ sCurrentValueToConsiderTrue }}"{% if not loop.last %},
{% endif %}
{% endfor %}

                    ]
                }{% if not loop.last %},
{% endif %}
{% endif %}
{% endfor %}

            },
{% endif %}
{% if aoWasdiConfiguration['metrics']['metric']['partition'] | default([]) | length == 0 %}
            "partition": []
{% else %}
            "partition": [
{% for sCurrentPartition in aoWasdiConfiguration['metrics']['metric']['partition'] %}
                "{{ sCurrentPartition }}"{% if not loop.last %},
{% endif %}
{% endfor %}

            ]
{% endif %}
        },
        "waitingTime": {{ aoWasdiConfiguration['metrics']['waitingTime'] }}
    },
    "storageUsageControl": {
        "storageSizeFreeSubscription": 20000000000,
        "deletionDelayFromWarning": 10,
        "isDeletionInTestMode": true,
        "warningEmailConfig": {
            "title": "Storage exceeded in WASDI",
            "message":"Dear <user>\n, your storage space in WASDI is <storage_size>, which exceeds the maximum limit of <storage_limit> allowed by your subscription. Please, proceed to free up some storage space, otherwise some of your workspaces will be automatically deleted in <warning_delay> days.\n\n Kind regards,\n the WASDI team"
        }
    },
    "ogcProcessesApi": {
        "baseAddress": "{{ aoWasdiConfiguration['ogcProcessesApi']['baseAddress'] }}",
        "conformsTo": "{{ aoWasdiConfiguration['ogcProcessesApi']['conformsTo'] }}",
        "defaultLinksLang": "{{ aoWasdiConfiguration['ogcProcessesApi']['defaultLinksLang'] }}",
        "defaultLinksType": "{{ aoWasdiConfiguration['ogcProcessesApi']['defaultLinksType'] }}",
        "landingDescription": "{{ aoWasdiConfiguration['ogcProcessesApi']['landingDescription'] }}",
        "landingLinkConformance": "{{ aoWasdiConfiguration['ogcProcessesApi']['landingLinkConformance'] }}",
        "landingLinkJobs": "{{ aoWasdiConfiguration['ogcProcessesApi']['landingLinkJobs'] }}",
        "landingLinkProcesses": "{{ aoWasdiConfiguration['ogcProcessesApi']['landingLinkProcesses'] }}",
        "landingLinkServiceDefinition": "{{ aoWasdiConfiguration['ogcProcessesApi']['landingLinkServiceDefinition'] }}",
        "landingLinkServiceDescription": "{{ aoWasdiConfiguration['ogcProcessesApi']['landingLinkServiceDescription'] }}",
        "landingTitle": "{{ aoWasdiConfiguration['ogcProcessesApi']['landingTitle'] }}",
        "validationEchoProcessId": "{{ aoWasdiConfiguration['ogcProcessesApi']['validationEchoProcessId'] }}",
        "validationModeOn": {{ aoWasdiConfiguration['ogcProcessesApi']['validationModeOn'] | lower }},
        "validationSessionId": "{{ aoWasdiConfiguration['ogcProcessesApi']['validationSessionId'] }}",
        "validationUserId": "{{ aoWasdiConfiguration['ogcProcessesApi']['validationUserId'] }}",
        "waitProcessMaxTimeout": {{ aoWasdiConfiguration['ogcProcessesApi']['waitProcessMaxTimeout'] }},
        "waitProcessSleepTimeout": {{ aoWasdiConfiguration['ogcProcessesApi']['waitProcessSleepTimeout'] }}
    },
{% if aoWasdiConfiguration['openEO'] | length == 0 %}
    "openEO": {},
{% else %}
    "openEO": {
        "baseAddress": "{{ aoWasdiConfiguration['openEO']['baseAddress'] }}",
        "api_version": "{{ aoWasdiConfiguration['openEO']['api_version'] }}",
        "backend_version": "{{ aoWasdiConfiguration['openEO']['backend_version'] }}",
        "stac_version": "{{ aoWasdiConfiguration['openEO']['stac_version'] }}",
        "type": "{{ aoWasdiConfiguration['openEO']['type'] }}",
        "id": "{{ aoWasdiConfiguration['openEO']['id'] }}",
        "title": "{{ aoWasdiConfiguration['openEO']['title'] }}",
        "production": {{ aoWasdiConfiguration['openEO']['production'] | lower }},
        "description": "{{ aoWasdiConfiguration['openEO']['description'] }}",
        "openEOWasdiAppName": "{{ aoWasdiConfiguration['openEO']['openEOWasdiAppName'] }}",
        "processes_config": "{{ aoWasdiConfiguration['openEO']['processes_config'] }}",
        "collections": [
{% for oDictCurrentCollection in aoWasdiConfiguration['openEO']['collections'] | default({}) %}
            {
                "stac_version": "{{ oDictCurrentCollection['stac_version'] }}",
                "version": "{{ oDictCurrentCollection['version'] }}",
                "type": "{{ oDictCurrentCollection['type'] }}",
                "id": "{{ oDictCurrentCollection['id'] }}",
                "title": "{{ oDictCurrentCollection['title'] }}",
                "description": "{{ oDictCurrentCollection['description'] }}",
                "license": "{{ oDictCurrentCollection['license'] }}",
                "extent": {
                    "spatial": {
{% if oDictCurrentCollection['extent']['spatial']['bbox'] | length == 0 %}
                        "bbox": []
{% else %}
                        "bbox": [
{% for oDictCurrentExtentSpatialBbox in oDictCurrentCollection['extent']['spatial']['bbox'] | default([]) %}
                            [
{% for sValue in oDictCurrentExtentSpatialBbox %}
                                {{ sValue }}{% if not loop.last %},
{% endif %}
{% endfor %}

                            ]{% if not loop.last %},
{% endif %}
{% endfor %}

                        ]
{% endif %}
                    },
                    "temporal": {
                        "interval": [
{% for oDictCurrentExtentTemporalInterval in oDictCurrentCollection['extent']['temporal']['interval'] | default([]) %}
                            [
{% for sValue in oDictCurrentExtentTemporalInterval %}
                                "{{ sValue }}"{% if not loop.last %},
{% endif %}
{% endfor %}

                            ]{% if not loop.last %},
{% endif %}
{% endfor %}

                        ]
                    }
                },
{% if oDictCurrentCollection['keywords'] | default([]) | length == 0 %}
                "keywords": [],
{% else %}
                "keywords": [
{% for sValue in oDictCurrentCollection['keywords'] %}
                    "{{ sValue }}"{% if not loop.last %},
{% endif %}
{% endfor %}

                ],
{% endif %}
{% if oDictCurrentCollection['providers'] | default([]) | length == 0 %}
                "providers": [],
{% else %}
                "providers": [
{% for oDictCurrentProvider in oDictCurrentCollection['providers'] %}
                    {
                        "name": "{{ oDictCurrentProvider['name'] }}",
                        "roles": [
{% for sValue in oDictCurrentProvider['roles'] %}
                            "{{ sValue }}"{% if not loop.last %},
{% endif %}
{% endfor %}

                        ],
                        "url": "{{ oDictCurrentProvider['url'] }}"
                    }{% if not loop.last %},
{% endif %}
{% endfor %}

                ],
{% endif %}
{% if oDictCurrentCollection['links'] | default([]) | length == 0 %}
                "links": [],
{% else %}
                "links": [
{% for oDictCurrentLink in oDictCurrentCollection['links'] %}
                    {
                        "rel": "{{ oDictCurrentLink['rel'] }}",
                        "href": "{{ oDictCurrentLink['href'] }}"
                    }{% if not loop.last %},
{% endif %}
{% endfor %}

                ],
{% endif %}
{% if ( oDictCurrentCollection['cubeDimensions'] | default('') ) == '' %}
                "cubeDimensions": {},
{% else %}
                "cubeDimensions": {
                    "x": {
                        "type": "{{ oDictCurrentCollection['cubeDimensions']['x']['type'] }}",
                        "axis": "{{ oDictCurrentCollection['cubeDimensions']['x']['axis'] }}",
{% if oDictCurrentCollection['cubeDimensions']['x']['extent'] | length == 0 %}
                        "extent": [],
{% else %}
                        "extent": [
{% for sValue in oDictCurrentCollection['cubeDimensions']['x']['extent'] %}
                            {{ sValue }}{% if not loop.last %},
{% endif %}
{% endfor %}

                        ],
{% endif %}
                        "reference_system": {{ oDictCurrentCollection['cubeDimensions']['x']['reference_system'] }}
                    },
                    "y": {
                        "type": "{{ oDictCurrentCollection['cubeDimensions']['y']['type'] }}",
                        "axis": "{{ oDictCurrentCollection['cubeDimensions']['y']['axis'] }}",
{% if oDictCurrentCollection['cubeDimensions']['y']['extent'] | length == 0 %}
                        "extent": [],
{% else %}
                        "extent": [
{% for sValue in oDictCurrentCollection['cubeDimensions']['y']['extent'] %}
                            {{ sValue }}{% if not loop.last %},
{% endif %}
{% endfor %}

                        ],
{% endif %}
                        "reference_system": {{ oDictCurrentCollection['cubeDimensions']['y']['reference_system'] }}
                    },
                    "t": {
                        "type": "{{ oDictCurrentCollection['cubeDimensions']['t']['type'] }}",
{% if oDictCurrentCollection['cubeDimensions']['t']['extent'] | length == 0 %}
                        "extent": [],
{% else %}
                        "extent": [
{% for sValue in oDictCurrentCollection['cubeDimensions']['t']['extent'] %}
                            {% if sValue is none %}null{% else %}"{{ sValue }}"{% endif %}{% if not loop.last %},
{% endif %}
{% endfor %}

                        ],
{% endif %}
                        "step": {% if oDictCurrentCollection['cubeDimensions']['t']['step'] is none %}null{% else %}oDictCurrentCollection['cubeDimensions']['t']['step']{% endif %}

                    },
                    "bands": {
                        "type": "{{ oDictCurrentCollection['cubeDimensions']['bands']['type'] }}",
{% if oDictCurrentCollection['cubeDimensions']['bands']['values'] | length == 0 %}
                        "values": [],
{% else %}
                        "values": [
{% for sValue in oDictCurrentCollection['cubeDimensions']['bands']['values'] %}
                            "{{ sValue }}"{% if not loop.last %},
{% endif %}
{% endfor %}

                        ]
{% endif %}
                    }
                },
{% endif %}
                "summaries": {
{% if oDictCurrentCollection['summaries']['constellation'] | default([]) | length == 0 %}
                    "constellation": [],
{% else %}
                    "constellation": [
{% for sValue in oDictCurrentCollection['summaries']['constellation'] %}
                        "{{ sValue }}"{% if not loop.last %},
{% endif %}
{% endfor %}

                    ],
{% endif %}
{% if oDictCurrentCollection['summaries']['platform'] | default([]) | length > 0 %}
                    "platform": [
{% for sValue in oDictCurrentCollection['summaries']['platform'] %}
                        "{{ sValue }}"{% if not loop.last %},
{% endif %}
{% endfor %}

                    ],
{% else %}
                    "platform": [],
{% endif %}
{% if oDictCurrentCollection['summaries']['instruments'] | default([]) | length > 0 %}
                    "instruments": [
{% for sValue in oDictCurrentCollection['summaries']['instruments'] %}
                        "{{ sValue }}"{% if not loop.last %},
{% endif %}
{% endfor %}

                    ]
{% else %}
                    "instruments": []
{% endif %}
                }
            }{% if not loop.last %},
{% endif %}
{% endfor %}

        ]
    },
{% endif %}
    "paths": {
        "dockerTemplatePath": "{{ aoWasdiConfiguration['paths']['dockerTemplatePath'] }}",
        "downloadRootPath": "{{ aoWasdiConfiguration['paths']['downloadRootPath'] }}",
        "gdalPath": "{{ aoWasdiConfiguration['paths']['gdalPath'] }}",
        "geoserverDataDir": "{{ aoWasdiConfiguration['paths']['geoserverDataDir'] }}",
        "logBasePath": "{{ aoWasdiConfiguration['paths']['logBasePath'] }}",
        "metadataPath": "{{ aoWasdiConfiguration['paths']['metadataPath'] }}",
        "missionsConfigFilePath": "{{ aoWasdiConfiguration['paths']['missionsConfigFilePath'] }}",
        "pythonExecPath": "{{ aoWasdiConfiguration['paths']['pythonExecPath'] }}",
        "s3VolumesBasePath": "{{ aoWasdiConfiguration['paths']['s3VolumesBasePath'] }}",
        "sen2CorePath": "{{ aoWasdiConfiguration['paths']['sen2CorePath'] }}",
        "sftpRootPath": "{{ aoWasdiConfiguration['paths']['sftpRootPath'] }}",
        "traefikMountedVolume": "{{ aoWasdiConfiguration['paths']['traefikMountedVolume'] }}",
        "userHomePath": "{{ aoWasdiConfiguration['paths']['userHomePath'] }}",
        "wasdiTempFolder": "{{ aoWasdiConfiguration['paths']['wasdiTempFolder'] }}"
    },
    "rabbit": {
        "user": "{{ aoWasdiConfiguration['rabbit']['user'] }}",
        "password": "{{ aoWasdiConfiguration['rabbit']['password'] }}",
        "host": "{{ aoWasdiConfiguration['rabbit']['host'] }}",
        "port": {{ aoWasdiConfiguration['rabbit']['port'] }},
        "exchange": "{{ aoWasdiConfiguration['rabbit']['exchange'] }}"
    },
    "s3Bucket": {
        "accessKey": "{{ aoWasdiConfiguration['s3Bucket']['accessKey'] }}",
        "secretKey": "{{ aoWasdiConfiguration['s3Bucket']['secretKey'] }}",
        "endpoint": "{{ aoWasdiConfiguration['s3Bucket']['endpoint'] }}",
        "bucketName": "{{ aoWasdiConfiguration['s3Bucket']['bucketName'] }}",
        "folders": "{{ aoWasdiConfiguration['s3Bucket']['folders'] }}"
    },
    "snap": {
        "auxPropertiesFile": "{{ aoWasdiConfiguration['snap']['auxPropertiesFile'] }}",
        "launcherLogActive": {{ aoWasdiConfiguration['snap']['launcherLogActive'] | lower }},
        "webLogActive": {{ aoWasdiConfiguration['snap']['webLogActive'] | lower }},
        "launcherLogFile": "{{ aoWasdiConfiguration['snap']['launcherLogFile'] }}",
        "webLogFile": "{{ aoWasdiConfiguration['snap']['webLogFile'] }}",
        "launcherLogLevel": "{{ aoWasdiConfiguration['snap']['launcherLogLevel'] }}",
        "webLogLevel": "{{ aoWasdiConfiguration['snap']['webLogLevel'] }}"
    },
    "sftp": {
        "sftpManagementWSServiceAddress": "{{ aoWasdiConfiguration['sftp']['sftpManagementWSServiceAddress'] }}"
    },
    "notifications": {
        "mercuriusAPIAddress": "{{ aoWasdiConfiguration['notifications']['mercuriusAPIAddress'] }}",
        "pwRecoveryMailTitle": "{{ aoWasdiConfiguration['notifications']['pwRecoveryMailTitle'] }}",
        "pwRecoveryMailSender": "{{ aoWasdiConfiguration['notifications']['pwRecoveryMailSender'] }}",
        "pwRecoveryMailText": "{{ aoWasdiConfiguration['notifications']['pwRecoveryMailText'] }}",
        "sftpMailTitle": "{{ aoWasdiConfiguration['notifications']['sftpMailTitle'] }}",
        "sftpManagementMailSender": "{{ aoWasdiConfiguration['notifications']['sftpManagementMailSender'] }}",
        "sftpMailText": "{{ aoWasdiConfiguration['notifications']['sftpMailText'] }}",
        "wasdiAdminMail": "{{ aoWasdiConfiguration['notifications']['wasdiAdminMail'] }}"
    },
    "loadBalancer": {
        "includeMainClusterAsNode": {{ aoWasdiConfiguration['loadBalancer']['includeMainClusterAsNode'] | lower }},
        "diskOccupiedSpaceMaxPercentage": {{ aoWasdiConfiguration['loadBalancer']['diskOccupiedSpaceMaxPercentage'] }},
        "metricsMaxAgeSeconds": {{ aoWasdiConfiguration['loadBalancer']['metricsMaxAgeSeconds'] }},
        "minTotalMemoryGBytes": 30
    },
    "catalogues": [
{% for sCurrentCatalogue in aoWasdiConfiguration['catalogues'] | default({}) | sort %}
        {
            "platform": "{{ sCurrentCatalogue }}",
            "catalogues": [
{% for sCurrentCatalogue in aoWasdiConfiguration['catalogues'][sCurrentCatalogue]['catalogues'] %}
                "{{ sCurrentCatalogue }}"{% if not loop.last %},
{% endif %}
{% endfor %}

            ]
        }{% if not loop.last %},
{% endif %}
{% endfor %}

    ],
    "dataProviders": [
{% for sCurrentDataProvider in aoWasdiConfiguration['dataProviders'] | sort %}
        {
            "name": "{{ sCurrentDataProvider }}",
            "description": "{{ aoWasdiConfiguration['dataProviders'][sCurrentDataProvider]['description'] }}",
            "queryExecutorClasspath": "{{ aoWasdiConfiguration['dataProviders'][sCurrentDataProvider]['queryExecutorClasspath'] }}",
            "providerAdapterClasspath": "{{ aoWasdiConfiguration['dataProviders'][sCurrentDataProvider]['providerAdapterClasspath'] }}",
            "pythonScript": "{{ aoWasdiConfiguration['dataProviders'][sCurrentDataProvider]['pythonScript'] }}",
            "link": "{{ aoWasdiConfiguration['dataProviders'][sCurrentDataProvider]['link'] }}",
            "searchListPageSize": "{{ aoWasdiConfiguration['dataProviders'][sCurrentDataProvider]['searchListPageSize'] }}",
            "defaultProtocol": "{{ aoWasdiConfiguration['dataProviders'][sCurrentDataProvider]['defaultProtocol'] }}",
            "parserConfig": "{{ aoWasdiConfiguration['dataProviders'][sCurrentDataProvider]['parserConfig'] }}",
            "user": "{{ aoWasdiConfiguration['dataProviders'][sCurrentDataProvider]['user'] }}",
            "password": "{{ aoWasdiConfiguration['dataProviders'][sCurrentDataProvider]['password'] }}",
            "apiKey": "{{ aoWasdiConfiguration['dataProviders'][sCurrentDataProvider]['apiKey'] }}",
            "localFilesBasePath": "{{ aoWasdiConfiguration['dataProviders'][sCurrentDataProvider]['localFilesBasePath'] }}",
            "urlDomain": "{{ aoWasdiConfiguration['dataProviders'][sCurrentDataProvider]['urlDomain'] }}",
            "connectionTimeout": "{{ aoWasdiConfiguration['dataProviders'][sCurrentDataProvider]['connectionTimeout'] }}",
            "readTimeout": "{{ aoWasdiConfiguration['dataProviders'][sCurrentDataProvider]['readTimeout'] }}",
            "adapterConfig": "{{ aoWasdiConfiguration['dataProviders'][sCurrentDataProvider]['adapterConfig'] }}",
            "cloudProvider": "{{ aoWasdiConfiguration['dataProviders'][sCurrentDataProvider]['cloudProvider'] }}",
            "supportedPlatforms": [
{% for sCurrentSupportedPlatform in aoWasdiConfiguration['dataProviders'][sCurrentDataProvider]['supportedPlatforms'] %}
                "{{ sCurrentSupportedPlatform }}"{% if not loop.last %},
{% endif %}
{% endfor %}

            ]
        }{% if not loop.last %},
{% endif %}
{% endfor %}

    ],
    "plan": {
        "listOfSatellites": "{{ aoWasdiConfiguration['plan']['listOfSatellites'] }}"
    },
    "geoserver": {
        "address": "{{ aoWasdiConfiguration['geoserver']['address'] }}",
        "user": "{{ aoWasdiConfiguration['geoserver']['user'] }}",
        "password": "{{ aoWasdiConfiguration['geoserver']['password'] }}",
        "maxGeotiffDimensionPyramid": "{{ aoWasdiConfiguration['geoserver']['maxGeotiffDimensionPyramid'] }}",
        "gdalRetileCommand": "{{ aoWasdiConfiguration['geoserver']['gdalRetileCommand'] }}"
    },
    "dockers": {
        "dockerComposeCommand": "{{ aoWasdiConfiguration['dockers']['dockerComposeCommand'] }}",
        "dockerNetworkMode": "{{ aoWasdiConfiguration['dockers']['dockerNetworkMode'] }}",
        "dockersDeployLogFilePath": "{{ aoWasdiConfiguration['dockers']['dockersDeployLogFilePath'] }}",
        "eoepca": {
            "dockerWriteFolder": "{{ aoWasdiConfiguration['dockers']['eoepca']['dockerWriteFolder'] }}",
            "adesServerAddress": "{{ aoWasdiConfiguration['dockers']['eoepca']['adesServerAddress'] }}",
            "authServerAddress": "{{ aoWasdiConfiguration['dockers']['eoepca']['authServerAddress'] }}",
            "user": "{{ aoWasdiConfiguration['dockers']['eoepca']['user'] }}",
            "password": "{{ aoWasdiConfiguration['dockers']['eoepca']['password'] }}",
            "clientId": "{{ aoWasdiConfiguration['dockers']['eoepca']['clientId'] }}",
            "clientSecret": "{{ aoWasdiConfiguration['dockers']['eoepca']['clientSecret'] }}"
        },
{% if aoWasdiConfiguration['dockers']['extraHosts'] == [] %}
        "extraHosts": [],
{% else %}
        "extraHosts": [
{% for sCurrentExtraHost in aoWasdiConfiguration['dockers']['extraHosts'] %}
            "{{ sCurrentExtraHost }}"{% if not loop.last %},
{% endif %}
{% endfor %}

        ],
{% endif %}
        "internalDockerAPIAddress": "{{ aoWasdiConfiguration['dockers']['internalDockerAPIAddress'] }}",
        "internalDockersBaseAddress": "{{ aoWasdiConfiguration['dockers']['internalDockersBaseAddress'] }}",
        "logDockerAPICallsPayload": {{ aoWasdiConfiguration['dockers']['logDockerAPICallsPayload'] | lower }},
        "meluxina": {
            "apiUrl": "{{ aoWasdiConfiguration['dockers']['meluxina']['apiUrl'] }}",
            "apiVersion": "{{ aoWasdiConfiguration['dockers']['meluxina']['apiVersion'] }}",
            "home": "{{ aoWasdiConfiguration['dockers']['meluxina']['home'] }}",
            "project": "{{ aoWasdiConfiguration['dockers']['meluxina']['project'] }}",
            "registryPassword": "{{ aoWasdiConfiguration['dockers']['meluxina']['registryPassword'] }}",
            "registryUserName": "{{ aoWasdiConfiguration['dockers']['meluxina']['registryUserName'] }}",
            "token": "{{ aoWasdiConfiguration['dockers']['meluxina']['token'] }}",
            "user": "{{ aoWasdiConfiguration['dockers']['meluxina']['user'] }}"
        },
        "millisBetweenAttmpts": {{ aoWasdiConfiguration['dockers']['millisBetweenAttmpts'] }},
        "millisBetweenStatusPolling": {{ aoWasdiConfiguration['dockers']['millisBetweenStatusPolling'] }},
        "millisWaitAfterDelete": {{ aoWasdiConfiguration['dockers']['millisWaitAfterDelete'] }},
        "millisWaitAfterDeployScriptCreated": {{ aoWasdiConfiguration['dockers']['millisWaitAfterDeployScriptCreated'] }},
        "millisWaitForLogin": {{ aoWasdiConfiguration['dockers']['millisWaitForLogin'] }},
        "numberOfAttemptsToPingTheServer": {{ aoWasdiConfiguration['dockers']['numberOfAttemptsToPingTheServer'] }},
        "numberOfPollStatusPollingCycleForLog": {{ aoWasdiConfiguration['dockers']['numberOfPollStatusPollingCycleForLog'] }},
        "pipInstallWasdiAddress": "{{ aoWasdiConfiguration['dockers']['pipInstallWasdiAddress'] }}",
        "processorsInternalPort": {{ aoWasdiConfiguration['dockers']['processorsInternalPort'] }},
{% if aoWasdiConfiguration['dockers']['processorTypes'] | length == 0 %}
        "processorTypes": [],
{% else %}
        "processorTypes": [
{% for sCurrentProcessorType in ( aoWasdiConfiguration['dockers']['processorTypes'] | sort ) %}
            {
                "processorType": "{{ sCurrentProcessorType }}",
{% if aoWasdiConfiguration['dockers']['processorTypes'][sCurrentProcessorType]['additionalMountPoints'] == [] %}
                "additionalMountPoints": [],
{% else %}
                "additionalMountPoints": [
{% for aoCurrentAdditionalMountPoint in aoWasdiConfiguration['dockers']['processorTypes'][sCurrentProcessorType]['additionalMountPoints'] %}
                    "{{ aoCurrentAdditionalMountPoint }}"{% if not loop.last %},
{% endif %}
{% endfor %}

                ],
{% endif %}
{% if aoWasdiConfiguration['dockers']['processorTypes'][sCurrentProcessorType]['commands'] == [] %}
                "commands": [],
{% else %}
                "commands": [
{% for aoCurrentCommand in aoWasdiConfiguration['dockers']['processorTypes'][sCurrentProcessorType]['commands'] %}
                    "{{ aoCurrentCommand }}"{% if not loop.last %},
{% endif %}
{% endfor %}

                ],
{% endif %}
{% if aoWasdiConfiguration['dockers']['processorTypes'][sCurrentProcessorType]['environmentVariables'] == [] %}
                "environmentVariables": [],
{% else %}
                "environmentVariables": [
{% for aoCurrentEnvironmentVariable in aoWasdiConfiguration['dockers']['processorTypes'][sCurrentProcessorType]['environmentVariables'] %}
                    {
                        "key": "{{ aoCurrentEnvironmentVariable['key'] }}",
                        "value": "{{ aoCurrentEnvironmentVariable['value'] }}"
                    }{% if not loop.last %},
{% endif %}
{% endfor %}

                ],
{% endif %}
                "image": "{{ aoWasdiConfiguration['dockers']['processorTypes'][sCurrentProcessorType]['image'] }}",
                "mountOnlyWorkspaceFolder": {{ aoWasdiConfiguration['dockers']['processorTypes'][sCurrentProcessorType]['mountOnlyWorkspaceFolder'] | bool | lower }},
{% if aoWasdiConfiguration['dockers']['processorTypes'][sCurrentProcessorType]['templateFilesToExcludeFromDownload'] == [] %}
                "templateFilesToExcludeFromDownload": [],
{% else %}
                "templateFilesToExcludeFromDownload": [
{% for sCurrentTemplateFileToExcludeFromDownload in aoWasdiConfiguration['dockers']['processorTypes'][sCurrentProcessorType]['templateFilesToExcludeFromDownload'] | sort %}
                    "{{ sCurrentTemplateFileToExcludeFromDownload }}"{% if not loop.last %},
{% endif %}
{% endfor %}

                ],
{% endif %}
                "version": "{{ aoWasdiConfiguration['dockers']['processorTypes'][sCurrentProcessorType]['version'] }}"
            }{% if not loop.last %},
{% endif %}
{% endfor %}

        ],
{% endif %}
{% if aoWasdiConfiguration['dockers']['registers'] | length == 0 %}
        "registers": [],
{% else %}
        "registers": [
{% for sCurrentDockerRegistry in aoWasdiConfiguration['dockers']['registers'] %}
            {
                "id": "{{ sCurrentDockerRegistry }}",
                "address": "{{ aoWasdiConfiguration['dockers']['registers'][sCurrentDockerRegistry]['address'] }}",
                "apiAddress": "{{ aoWasdiConfiguration['dockers']['registers'][sCurrentDockerRegistry]['apiAddress'] }}",
                "user": "{{ aoWasdiConfiguration['dockers']['registers'][sCurrentDockerRegistry]['user'] }}",
                "password": "{{ aoWasdiConfiguration['dockers']['registers'][sCurrentDockerRegistry]['password'] }}",
                "priority": {{ aoWasdiConfiguration['dockers']['registers'][sCurrentDockerRegistry]['priority'] }},
                "repositoryName": "{{ aoWasdiConfiguration['dockers']['registers'][sCurrentDockerRegistry]['repositoryName'] }}"
            }{% if not loop.last %},
{% endif %}
{% endfor %}

        ],
{% endif %}
        "removeDockersAfterShellExec": {{ aoWasdiConfiguration['dockers']['removeDockersAfterShellExec'] | lower }},
{% if aoWasdiConfiguration['dockers']['shellExecCommands'] | length == 0 %}
        "shellExecCommands": {}
{% else %}
        "shellExecCommands": {
{% for sCurrentShellExecCommand in aoWasdiConfiguration['dockers']['shellExecCommands'] | sort %}
            "{{ sCurrentShellExecCommand }}": {
{% if aoWasdiConfiguration['dockers']['shellExecCommands'][sCurrentShellExecCommand]['additionalMountPoints'] | length == 0 %}
                "additionalMountPoints": [],
{% else %}
                "additionalMountPoints": [
{% for sCurrentAdditionalMountPoint in aoWasdiConfiguration['dockers']['shellExecCommands'][sCurrentShellExecCommand]['additionalMountPoints'] %}
                    "{{ sCurrentAdditionalMountPoint }}"{% if not loop.last %},
{% endif %}
{% endfor %}

                ],
{% endif %}
                "addPrefixToCommand": "{{ aoWasdiConfiguration['dockers']['shellExecCommands'][sCurrentShellExecCommand]['addPrefixToCommand'] }}",
                "containerVersion": "{{ aoWasdiConfiguration['dockers']['shellExecCommands'][sCurrentShellExecCommand]['containerVersion'] }}",
                "dockerImage": "{{ aoWasdiConfiguration['dockers']['shellExecCommands'][sCurrentShellExecCommand]['dockerImage'] }}",
                "forceLocal": {{ aoWasdiConfiguration['dockers']['shellExecCommands'][sCurrentShellExecCommand]['forceLocal'] | lower }},
                "includeFirstCommand": {{ aoWasdiConfiguration['dockers']['shellExecCommands'][sCurrentShellExecCommand]['includeFirstCommand'] | lower }},
                "overrideDockerConfig": {{ aoWasdiConfiguration['dockers']['shellExecCommands'][sCurrentShellExecCommand]['overrideDockerConfig'] | lower }},
                "removePathFromFirstArg": {{ aoWasdiConfiguration['dockers']['shellExecCommands'][sCurrentShellExecCommand]['removePathFromFirstArg'] | lower }}
            }{% if not loop.last %},
{% endif %}
{% endfor %}

        }
{% endif %}
    },
    "scheduler": {
        "javaExe": "{{ aoWasdiConfiguration['scheduler']['javaExe'] }}",
        "killCommand": "{{ aoWasdiConfiguration['scheduler']['killCommand'] }}",
        "lastStateChangeDateOrderBy": {{ aoWasdiConfiguration['scheduler']['lastStateChangeDateOrderBy'] }},
        "launcherPath": "{{ aoWasdiConfiguration['scheduler']['launcherPath'] }}",
        "maxQueue": "{{ aoWasdiConfiguration['scheduler']['maxQueue'] }}",
        "processingThreadSleepingTimeMS": "{{ aoWasdiConfiguration['scheduler']['processingThreadSleepingTimeMS'] }}",
        "processingThreadWaitStartMS": "{{ aoWasdiConfiguration['scheduler']['processingThreadWaitStartMS'] }}",
        "redirectLauncherOutput": {{ aoWasdiConfiguration['scheduler']['redirectLauncherOutput'] }},
        "sometimesCheckCounter":  {{ aoWasdiConfiguration['scheduler']['sometimesCheckCounter'] }},
        "watchDogCounter": {{ aoWasdiConfiguration['scheduler']['watchDogCounter'] }},
        "activateWatchDog":  {{ aoWasdiConfiguration['scheduler']['activateWatchDog'] | lower }},
        "schedulers": [
{% for sCurrentScheduler in ( aoWasdiConfiguration['scheduler']['schedulers'] | sort ) %}
            {
                "name": "{{ sCurrentScheduler }}",
                "maxQueue": "{{ aoWasdiConfiguration['scheduler']['schedulers'][sCurrentScheduler]['maxQueue'] }}",
                "timeoutMs": "{{ aoWasdiConfiguration['scheduler']['schedulers'][sCurrentScheduler]['timeoutMs'] }}",
                "opTypes": "{{ aoWasdiConfiguration['scheduler']['schedulers'][sCurrentScheduler]['opTypes'] }}",
                "opSubType": "{{ aoWasdiConfiguration['scheduler']['schedulers'][sCurrentScheduler]['opSubType'] }}",
                "enabled": "{{ aoWasdiConfiguration['scheduler']['schedulers'][sCurrentScheduler]['enabled'] }}",
                "specialWaitCondition": {{ aoWasdiConfiguration['scheduler']['schedulers'][sCurrentScheduler]['specialWaitCondition'] | lower  }},
                "maxWaitingQueue": {{ aoWasdiConfiguration['scheduler']['schedulers'][sCurrentScheduler]['maxWaitingQueue'] }}
            }{% if not loop.last %},
{% endif %}
{% endfor %}

        ],
        "timeoutMs": "{{ aoWasdiConfiguration['scheduler']['timeoutMs'] }}"
    },
    "stripe": {
        "apiKey": "{{ aoWasdiConfiguration['stripe']['apiKey'] }}",
{% if aoWasdiConfiguration['stripe']['products'] | length == 0 %}
        "products": []
{% else %}
        "products": [
{% for sCurrentProduct in aoWasdiConfiguration['stripe']['products'] %}
            {
                "id": "{{ sCurrentProduct }}",
                "url": "{{ aoWasdiConfiguration['stripe']['products'][sCurrentProduct]['url'] }}"
            }{% if not loop.last %},
{% endif %}
{% endfor %}

        ]
{% endif %}
    },
    "systemUserName": "{{ aoWasdiConfiguration['systemUserName'] }}",
    "systemUserId": "{{ aoWasdiConfiguration['systemUserId'] }}",
    "systemGroupName": "{{ aoWasdiConfiguration['systemGroupName'] }}",
    "systemGroupId": "{{ aoWasdiConfiguration['systemGroupId'] }}",
    "traefik": {
{% if aoWasdiConfiguration['traefik']['firewallWhiteList'] | length == 0 %}
        "firewallWhiteList": []
{% else %}
        "firewallWhiteList": [
{% for sCurrentFirewallWhiteIp in aoWasdiConfiguration['traefik']['firewallWhiteList'] %}
{% if sCurrentFirewallWhiteIp != "" %}
            "{{ sCurrentFirewallWhiteIp }}"{% if not loop.last %},
{% endif %}
{% endif %}
{% endfor %}

        ]
{% endif %}
    },
    "useNotebooksDockerAddress": {{ aoWasdiConfiguration['useNotebooksDockerAddress'] | lower }}
}
