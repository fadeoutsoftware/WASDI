cwlVersion: v1.0

$namespaces:
  s: https://schema.org/
s:softwareVersion: 0.5.0
schemas:
- http://schema.org/version/9.0/schemaorg-current-http.rdf


$graph:
- class: Workflow

  id: {{  wasdiAppId }}
  label: {{ wasdiAppDescription }}
  doc: {{ wasdiAppDescription }}

  requirements:
  - class: InlineJavascriptRequirement

  inputs:
{{ wasdiAppParametersDeclaration }}
    - wasdi__proc__id:
      type: string
    - wasdi__session__id
      type: string        
    - wasdi__user__id
      type: string
    - wasdi__ws__id
      type: string

  outputs: 
  - id: results
    outputSource:
    - node_wasdi/results
    type: Directory
  
  steps:
    node_wasdi:
      in:
{{ wasdiAppParametersAsArgs }}
        wasdi__proc__id: wasdi__proc__id
        wasdi__session__id: wasdi__session__id
        wasdi__user__id: wasdi__user__id
        wasdi__ws__id: wasdi__ws__id         
      out:
      - results

      run: "#wasdi_app"


- class: CommandLineTool

  id: wasdi_app
  label: executes the WASDI Processor

  requirements: 
    DockerRequirement:
      dockerPull: {{ wasdiProcessorImage }}
    ResourceRequirement:
      coresMax: 4
      ramMax: 36000
    InlineJavascriptRequirement: {}
    InitialWorkDirRequirement:
      listing:
        - entryname: params.json
          entry: |-
            ${
               var sParamsJson = "{\n";
               var asKeys = Object.keys(inputs);

               for (var i=0; i<asKeys.length; i++) {
                 var sKey = asKeys[i];
                 var oValue = inputs[sKey];
                 sParamsJson += sKey + ":"
                 if (typeof oValue === 'string' || oValue instanceof String) {
                   sParamsJson += '"' + oValue + '"';
                 }
                 else {
                   sParamsJson += oValue;
                 }
                 if (i<asKeys.length-1) {
                   sParamsJson += ",\n"
                 }
               }

               sParamsJson += "\n}\n"

               return sParamsJson;
            }
        - entryname: config.json
          entry: |-
            {
              "USER": "$( inputs.wasdi__user__id )",
              "WORKSPACEID": "$( inputs.wasdi__user__id )",
              "SESSIONID": "$( inputs.wasdi__session__id )",
              "MYPROCID": "$( inputs.wasdi__proc__id )",
              "PARAMETERSFILEPATH": "./params.json"
            }            
        - entryname: run_wasdi_app.sh
          entry: |-
            #!/bin/bash
            export HOME=$PWD
            eoepcaProcessorExecutor    
            res=$?
            rm -f params.json
            rm -f run_me.sh
            rm -fr $HOME/.wasdi
            exit $res

  baseCommand: ["python3", "eoepcaProcessorExecutor.py"]
  
  inputs: 
    {{ wasdiAppParametersDeclaration }} 
  
  outputs:
    results:
      type: Directory
      outputBinding:
        glob: .

