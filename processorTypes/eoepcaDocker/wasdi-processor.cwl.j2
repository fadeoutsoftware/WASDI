cwlVersion: v1.2
$namespaces:
  s: https://schema.org/
$schemas:
  - https://schema.org/version/latest/schemaorg-current-https.rdf
$graph:
  - class: Workflow
    id: {{ wasdiAppId }}
    label: "Workflow for the WASDI Processor"
    doc: "Workflow for the WASDI Processor"
    inputs:
      wasdi__proc__id:
        type: string
      wasdi__session__id:
        type: string
      wasdi__user__id:
        type: string
      wasdi__ws__id:
        type: string
{%- for sCurrentParameter in wasdiAppParametersDeclaration | default([]) %}
      {{ sCurrentParameter['key'] }}:
        type: {{ sCurrentParameter['type'] }}{% endfor %}
    outputs:
      - id: results
        outputSource:
          - node_{{ wasdiAppId }}/results
        type: Directory
    steps:
      node_{{ wasdiAppId }}:
        in:
          wasdi__proc__id: wasdi__proc__id
          wasdi__session__id: wasdi__session__id
          wasdi__user__id: wasdi__user__id
          wasdi__ws__id: wasdi__ws__id
{%- for sCurrentParameter in wasdiAppParametersDeclaration | default([]) %}
          {{ sCurrentParameter['key'] }}: {{ sCurrentParameter['key'] }}{% endfor %}
        out:
          - results
        run: "#app_{{ wasdiAppId }}"
  - class: CommandLineTool
    id: app_{{ wasdiAppId }}
    label: executes the WASDI Processor
    inputs:
      wasdi__proc__id:
        type: string
      wasdi__session__id:
        type: string
      wasdi__user__id:
        type: string
      wasdi__ws__id:
        type: string
{%- for sCurrentParameter in wasdiAppParametersDeclaration | default([]) %}
      {{ sCurrentParameter['key'] }}:
        type: {{ sCurrentParameter['type'] }}{% endfor %}
    outputs:
      results:
        type: Directory
        outputBinding:
          glob: .
    requirements:
      EnvVarRequirement:
        envDef:
          WASDI_OUTPUT: $(runtime.outdir)
      NetworkAccess:
        networkAccess: true
      DockerRequirement:
        dockerPull: {{ wasdiProcessorImage }}
      ResourceRequirement:
        coresMax: 1
        ramMax: 100
      InlineJavascriptRequirement: {}
      InitialWorkDirRequirement:
        listing:
          - entryname: params.json
            entry: |-
                ${
                    var sParamsJson = "{";
                    var asKeys = Object.keys(inputs);

                    for (var i=0; i<asKeys.length; i++) {
                        var sKey = asKeys[i];

                        if (sKey=="wasdi__proc__id" || sKey=="wasdi__session__id" || sKey=="wasdi__user__id" || sKey=="wasdi__ws__id") {
                            continue;
                        }

                        var oValue = inputs[sKey];
                        sParamsJson += '"' + sKey + '":';
                        if (typeof oValue === 'string' || oValue instanceof String) {
                            sParamsJson += '"' + oValue + '"';
                        }
                        else {
                            sParamsJson += oValue;
                        }

                        sParamsJson += ",";
                    }

                    sParamsJson = sParamsJson.substring(0, sParamsJson.length - 1);
                    sParamsJson += "}"
                    return sParamsJson;
                }
          - entryname: config.json
            entry: |-
                {
                    "USER": "$( inputs.wasdi__user__id )",
                    "WORKSPACEID": "$( inputs.wasdi__ws__id )",
                    "SESSIONID": "$( inputs.wasdi__session__id )",
                    "MYPROCID": "$( inputs.wasdi__proc__id )",
                    "PARAMETERSFILEPATH": " $(runtime.outdir)/params.json",
                    "BASEURL": "https://test-private.wasdi.net/wasdiwebserver/rest"
                }
    baseCommand:
      - "python3"
      - "/home/wasdi/application/eoepcaProcessorExecutor.py"
