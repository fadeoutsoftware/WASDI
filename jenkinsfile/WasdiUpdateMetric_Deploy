pipeline {
  agent any

  environment {
    currentRevision = "0.0.${env.BUILD_ID}";
  }

  options {
    buildDiscarder(logRotator(numToKeepStr: '3', daysToKeepStr: '30'))
    disableConcurrentBuilds()
  }

  stages {
    stage('DEBUG') {
      steps {
        sh script: "pwd", label: "Current location"

        echo "env.currentRevision = " + env.currentRevision
        echo "env.targetedEnvironment = " + env.targetedEnvironment
        echo "env.GIT_BRANCH = " + env.GIT_BRANCH
        echo "env.WORKSPACE = " + env.WORKSPACE
      }
    }

    stage('INITIALIZATION') {
      steps {
        script {
          currentBuild.displayName = "WASDI ${currentRevision}"
          currentBuild.description = "WASDI - DEPLOY THE SERVICE UPDATE METRIC"
        }
      }
    }

    stage('DEPLOYMENT') {
      steps {
        sh script: """
          cd /opt/companyExploitation/specific/automation/continuousDelivery/ansible/
          ansible-playbook playbooks/deployWasdiUpdateMetric.yml --inventory inventories/wasdi.yml --limit ${env.targetedEnvironment.toLowerCase()} --diff --extra-vars 'currentEnvironment=${env.targetedEnvironment.toLowerCase()} currentRevision=${currentRevision} sourceDirectory=${WORKSPACE}'
        """,
        label: "Execute ansible-playbook"
      }
    }
  }

  post {
    always {
      cleanWs()
    }
  }
}
