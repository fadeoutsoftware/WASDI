pipeline {
  agent any

  environment {
    sCurrentRevision = "0.0.${env.BUILD_ID}"
  }

  options {
    buildDiscarder(logRotator(numToKeepStr: '3', daysToKeepStr: '30'))
    disableConcurrentBuilds()
  }

  tools {
    jdk "WASDI_JDK_8"
    maven "WASDI_MAVEN"
  }

  stages {
    stage('DEBUG') {
      steps {
        echo "env.GIT_BRANCH          = " + env.GIT_BRANCH
        echo "env.sAnsibleLimit       = " + env.sAnsibleLimit
        echo "env.sCurrentRevision    = " + env.sCurrentRevision
        echo "env.sSourceBranch       = " + env.sSourceBranch
        echo "env.sWasdiAnsiblePath   = " + env.sWasdiAnsiblePath
        echo "env.sWasdiMavenSettings = " + env.sWasdiMavenSettings
        echo "env.WORKSPACE           = " + env.WORKSPACE

        sh script: "pwd", label: "Current location"
        sh script: "cat pom.xml", label: "Content of the main pom.xml file"

        sh script: "which mvn", label: "Tool > mvn > path"
        sh script: "mvn --version", label: "Tool > mvn > current version"
        sh script: "which java", label: "Tool > java > path"
        sh script: "java -version", label: "Tool > java > current version"
      }
    }

    stage('INITIALIZATION') {
      steps {
        script {
          currentBuild.displayName = "WASDI ${env.sCurrentRevision}"
          currentBuild.description = "WASDI - BUILD OF KEYCLOAK THEME + DEPLOY IT"
        }
      }
    }

    stage('MAVEN - BUILD') {
      steps {
        sh script: """
          cd ./keycloak/theme
          mvn --batch-mode --settings ${env.sWasdiMavenSettings} --activate-profiles wasdi-${env.sAnsibleLimit} --define revision=${env.sCurrentRevision} --define skipTests --update-snapshots clean package
        """,
        label: "Build"
      }
    }

    stage('MAVEN - UPLOAD IN NEXUS') {
      steps {
        sh script: """
          cd ./keycloak/theme
          mvn --batch-mode --settings ${env.sWasdiMavenSettings} --activate-profiles wasdi-${env.sAnsibleLimit} --define revision=${env.sCurrentRevision} --define skipTests --update-snapshots deploy
        """,
        label: "Deploy in Nexus"
      }
    }

    stage('DEPLOYMENT') {
      steps {
        sh script: """
          cd ${env.sWasdiAnsiblePath}
          ansible-playbook playbooks/deployKeycloakTheme.yml --inventory inventories/wasdi.yml --limit ${env.sAnsibleLimit} --diff --extra-vars 'keycloakDeploymentSpecificTheme=True sCurrentRevision=${env.sCurrentRevision} sSourceDirectory=${WORKSPACE}'
        """,
        label: "Execute ansible-playbook"
      }
    }
  }

  post {
    always {
      cleanWs()
    }
  }
}
