pipeline {
  agent any

  options {
    buildDiscarder(logRotator(numToKeepStr: '3', daysToKeepStr: '30'))
    disableConcurrentBuilds()
  }

  stages {
    stage('DEBUG') {
      steps {
        sh script: "pwd", label: "Current location"

        echo "env.sourceBranch = " + env.sourceBranch
        echo "env.sWasdiAnsiblePath = " + env.sWasdiAnsiblePath
        echo "env.GIT_BRANCH = " + env.GIT_BRANCH
        echo "env.WORKSPACE = " + env.WORKSPACE
      }
    }

    stage('INITIALIZATION') {
      steps {
        script {
          currentBuild.displayName = "Rebuild #${env.BUILD_ID}"
          currentBuild.description = "WASDI - UPDATE WASDI WEB SERVER CLASSES - ${env.BUILD_ID}"
        }
      }
    }

    stage('BUILD') {
      steps {
        sh script: """
          cd ${env.sWasdiAnsiblePath}
          ansible-playbook playbooks/deployWasdiWebserverClasses.yml --inventory inventories/wasdi.yml --limit test --diff
        """,
        label: "Execute ansible-playbook"
      }
    }
  }

  post {
    always {
      cleanWs()
    }
  }
}
