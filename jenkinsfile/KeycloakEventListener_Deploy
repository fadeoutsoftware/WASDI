pipeline {
  agent any

  options {
    buildDiscarder(logRotator(numToKeepStr: '3', daysToKeepStr: '30'))
    disableConcurrentBuilds()
  }

  stages {
    stage('DEBUG') {
      steps {
        echo "env.GIT_BRANCH          = " + env.GIT_BRANCH
        echo "env.sAnsibleLimit       = " + env.sAnsibleLimit
        echo "env.sCurrentRevision    = " + env.sCurrentRevision
        echo "env.sSourceBranch       = " + env.sSourceBranch
        echo "env.sWasdiAnsiblePath   = " + env.sWasdiAnsiblePath
        echo "env.WORKSPACE           = " + env.WORKSPACE

        sh script: "pwd", label: "Current location"
      }
    }

    stage('INITIALIZATION') {
      steps {
        script {
          currentBuild.displayName = "${env.sCurrentRevision}"
          currentBuild.description = "WASDI - DEPLOY OF KEYCLOAK EVENT LISTENER"
        }
      }
    }

    stage('DEPLOYMENT') {
      steps {
        sh script: """
          cd ${env.sWasdiAnsiblePath}
          ansible-playbook playbooks/deployKeycloakEventListener.yml --inventory inventories/wasdi.yml --limit ${env.sAnsibleLimit} --diff --extra-vars 'keycloakDeploymentSpecificEventListener=True sCurrentRevision=${env.sCurrentRevision} sSourceDirectory=${WORKSPACE}'
        """,
        label: "Execute ansible-playbook"
      }
    }
  }

  post {
    always {
      cleanWs()
    }
  }
}
