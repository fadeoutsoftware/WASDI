http:
  routers:
    r_{{ sWasdiNexusServiceName }}:
{% if bWasdiTraefikSslEnabled == True and aoWasdiContainerTraefikSslCertificates | default([]) | length > 0 %}
      entrypoints: "websecure"
{% else %}
      entrypoints: "webs"
{% endif %}
      rule: "Host(`{{ sWasdiTraefikRuleHost }}`) && PathPrefix(`{{ sWasdiNexusDefaultContextPath }}`)"
      service: "s_{{ sWasdiNexusServiceName }}"
      middlewares: "mw_wasdi-secure-allowFrame@file"
{% if bWasdiTraefikSslEnabled == True and aoWasdiContainerTraefikSslCertificates | default([]) | length > 0 %}
      tls: true
{% endif %}
    r_{{ sWasdiNexusServiceName }}_docker-registry:
{% if bWasdiTraefikSslEnabled == True and aoWasdiContainerTraefikSslCertificates | default([]) | length > 0 %}
      entrypoints: "websecure"
{% else %}
      entrypoints: "webs"
{% endif %}
      rule: "Host(`{{ sEnvironmentName }}-docker-registry-main{{ sWasdiHostId }}.wasdi.net`) && PathPrefix(`/`)"
      service: "s_{{ sWasdiNexusServiceName }}_docker-registry"
      middlewares: "mw_wasdi-secure-allowFrame@file"
{% if bWasdiTraefikSslEnabled == True and aoWasdiContainerTraefikSslCertificates | default([]) | length > 0 %}
      tls: true
{% endif %}
  services:
    s_{{ sWasdiNexusServiceName }}:
      loadBalancer:
        servers:
          - url: "http://{{ sWasdiDockerNetworkGateway }}:{{ iWasdiNexusListenPort }}/{{ sWasdiNexusDefaultContextPath.lstrip('/').rstrip('/') }}"
    s_{{ sWasdiNexusServiceName }}_docker-registry:
      loadBalancer:
        servers:
          - url: "http://{{ sWasdiDockerNetworkGateway }}:{{ iWasdiNexusDockerRegistryListenPort }}"
