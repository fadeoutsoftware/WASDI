FROM ubuntu:22.04


MAINTAINER "WASDI SARL"


# From now, all commands executed are executed with the user 'root'
USER root


# This environment variable is setted to avoid packages to ask a confirmation
ENV DEBIAN_FRONTEND="noninteractive"

# This variable is setted to make Python stop creating files '.pyc'
ENV PYTHONDONTWRITEBYTECODE="False"

# This variable is setted to force the 'print' method of Python to flush message directly
ENV PYTHONUNBUFFERED="True"

# This variable is setted to set the default editor
ENV EDITOR="nano"


# RUN generic to create user, group, directories, etc
RUN groupadd --gid {{ sWasdiSystemGroupId }} --non-unique {{ sWasdiSystemGroupName }} && \
    useradd --create-home --home-dir {{ sWasdiSystemUserHome }} --uid {{ sWasdiSystemUserId }} --gid {{ sWasdiSystemGroupId }} --non-unique --shell /bin/bash {{ sWasdiSystemUserName }} && \
    mkdir --parents \
        {{ sWasdiSystemUserHome }}/.ssh \
        {{ sWasdiSoftwareRootDirectoryPath }} && \
    chown {{ sWasdiSystemUserName }}:{{ sWasdiSystemGroupName }} \
        {{ sWasdiSystemUserHome }}/.ssh && \
    chown {{ sWasdiSoftwareRootDirectoryOwner }}:{{ sWasdiSoftwareRootDirectoryGroup }} \
        {{ sWasdiSoftwareRootDirectoryPath }} && \
    chmod 700 \
        {{ sWasdiSystemUserHome }}/.ssh && \
    chmod {{ sWasdiSoftwareRootDirectoryMode }} \
        {{ sWasdiSoftwareRootDirectoryPath }}


# RUN generic to update the system and install common packages
RUN echo "APT::Install-Suggests \"0\";" > /etc/apt/apt.conf.d/99local && \
    echo "APT::Install-Recommends \"0\";" >> /etc/apt/apt.conf.d/99local && \
    echo "APT::Get::Assume-Yes \"true\";" >> /etc/apt/apt.conf.d/99local && \
    echo "APT::Keep-Downloaded-Packages \"false\";" >> /etc/apt/apt.conf.d/99local && \
    echo "Dpkg::Options::--force-confold;" >> /etc/apt/apt.conf.d/99local && \
    apt-get update && \
    apt-get install \
        ca-certificates && \
    echo "deb https://mirror.ubuntu.ikoula.com/ jammy main restricted universe multiverse"          > /etc/apt/sources.list && \
    echo "deb https://mirror.ubuntu.ikoula.com/ jammy-updates main restricted universe multiverse"  >> /etc/apt/sources.list && \
    echo "deb https://mirror.ubuntu.ikoula.com/ jammy-security main restricted universe multiverse" >> /etc/apt/sources.list && \
    apt-get update && \
    apt-get dist-upgrade && \
    apt-get install \
        curl \
        nano \
        tar \
        unzip \
        wget && \
    rm --recursive --force /var/lib/apt/lists/* && \
    find / -xdev -type d -name __pycache__ -exec rm --recursive --force {} +


# From now, all commands executed are executed with the user '{{ sWasdiSystemUserName }}'
USER {{ sWasdiSystemUserName }}


# RUN specific to install JRE 8
RUN mkdir --parents \
        {{ sWasdiJre8RootDirectoryPath }} \
        {{ sWasdiJre8RootDirectoryPath }}/{{ sWasdiJre8Version }} && \
    chown {{ sWasdiJre8RootDirectoryOwner }}:{{ sWasdiJre8RootDirectoryGroup }} \
        {{ sWasdiJre8RootDirectoryPath }} \
        {{ sWasdiJre8RootDirectoryPath }}/{{ sWasdiJre8Version }} && \
    chmod {{ sWasdiJre8RootDirectoryMode }} \
        {{ sWasdiJre8RootDirectoryPath }} \
        {{ sWasdiJre8RootDirectoryPath }}/{{ sWasdiJre8Version }} && \
    wget \
        --no-verbose \
        --output-document /tmp/{{ sWasdiJre8SourceUrl | basename }} \
        --progress=bar:force:noscroll \
        --show-progress \
        {{ sWasdiJre8SourceUrl }} --output-document /tmp/{{ sWasdiJre8SourceUrl | basename }} && \
    tar \
        --directory {{ sWasdiJre8RootDirectoryPath }}/{{ sWasdiJre8Version }} \
        --extract \
        --file /tmp/{{ sWasdiJre8SourceUrl | basename }} \
        --strip-components=1 && \
    rm --force \
        /tmp/{{ sWasdiJre8SourceUrl | basename }}

ENV JAVA_HOME="{{ sWasdiJre8RootDirectoryPath }}/{{ sWasdiJre8Version }}"
ENV PATH="{{ sWasdiJre8RootDirectoryPath }}/{{ sWasdiJre8Version }}/bin:${PATH}"


# From now, all commands executed are executed with the user 'root'
USER root


# RUN specific to Tomcat
RUN apt-get update && \
    apt-get install \
        libjhdf4-jni \
        libjhdf5-jni && \
    rm --recursive --force /var/lib/apt/lists/* && \
    find / -xdev -type d -name __pycache__ -exec rm --recursive --force {} +


# From now, all commands executed are executed with the user '{{ sWasdiSystemUserName }}'
USER {{ sWasdiSystemUserName }}


# RUN specific to install Tomcat
RUN mkdir --parents \
        {{ sWasdiTomcatWasdiWebServerRootDirectoryPath }} \
        {{ sWasdiTomcatWasdiWebServerRootDirectoryPath }}/{{ sWasdiTomcatWasdiWebServerVersion }} && \
    chown {{ sWasdiTomcatWasdiWebServerRootDirectoryOwner }}:{{ sWasdiTomcatWasdiWebServerRootDirectoryGroup }} \
        {{ sWasdiTomcatWasdiWebServerRootDirectoryPath }} \
        {{ sWasdiTomcatWasdiWebServerRootDirectoryPath }}/{{ sWasdiTomcatWasdiWebServerVersion }} && \
    chmod {{ sWasdiTomcatWasdiWebServerRootDirectoryMode }} \
        {{ sWasdiTomcatWasdiWebServerRootDirectoryPath }} \
        {{ sWasdiTomcatWasdiWebServerRootDirectoryPath }}/{{ sWasdiTomcatWasdiWebServerVersion }} && \
    wget \
        --no-verbose \
        --output-document /tmp/{{ sWasdiTomcatWasdiWebServerSourceUrl | basename }} \
        --progress=bar:force:noscroll \
        --show-progress \
        {{ sWasdiTomcatWasdiWebServerSourceUrl }} && \
    tar \
        --directory {{ sWasdiTomcatWasdiWebServerRootDirectoryPath }}/{{ sWasdiTomcatWasdiWebServerVersion }} \
        --extract \
        --file /tmp/{{ sWasdiTomcatWasdiWebServerSourceUrl | basename }} \
        --strip-components=1 && \
    rm --recursive --force \
      /tmp/{{ sWasdiTomcatWasdiWebServerSourceUrl | basename }} \
      {{ sWasdiTomcatWasdiWebServerRootDirectoryMode }} {{ sWasdiTomcatWasdiWebServerRootDirectoryPath }}/{{ sWasdiTomcatWasdiWebServerVersion }}/webapps/ROOT \
      {{ sWasdiTomcatWasdiWebServerRootDirectoryMode }} {{ sWasdiTomcatWasdiWebServerRootDirectoryPath }}/{{ sWasdiTomcatWasdiWebServerVersion }}/webapps/docs \
      {{ sWasdiTomcatWasdiWebServerRootDirectoryMode }} {{ sWasdiTomcatWasdiWebServerRootDirectoryPath }}/{{ sWasdiTomcatWasdiWebServerVersion }}/webapps/examples && \
    sed --in-place 's/127\\.\\d+\\.\\d+\\.\\d+/127\\.\\d+\\.\\d+\\.\\d+|{{ sWasdiDockerNetworkRange.split('.')[0] }}\\.{{ sWasdiDockerNetworkRange.split('.')[1] }}\\.\\d+\\.\\d+/g' {{ sWasdiTomcatWasdiWebServerRootDirectoryPath }}/{{ sWasdiTomcatWasdiWebServerVersion }}/webapps/manager/META-INF/context.xml

ENV PATH="{{ sWasdiTomcatWasdiWebServerRootDirectoryPath }}/{{ sWasdiTomcatWasdiWebServerVersion }}/bin:${PATH}"


# Set the workdir
WORKDIR {{ sWasdiTomcatWasdiWebServerRootDirectoryPath }}/{{ sWasdiTomcatWasdiWebServerVersion }}


# Copy data
COPY --chown={{ sWasdiTomcatWasdiWebServerBuildTargetFileOwner }}:{{ sWasdiTomcatWasdiWebServerBuildTargetFileGroup }} ./dataToCopy/{{ sWasdiTomcatWasdiWebServerBuildTargetFileName }} {{ sWasdiTomcatWasdiWebServerRootDirectoryPath }}/{{ sWasdiTomcatWasdiWebServerVersion }}/webapps/{{ sWasdiTomcatWasdiWebServerBuildTargetFileName }}
COPY --chown={{ sWasdiTomcatWasdiWebServerBuildTargetFileOwner }}:{{ sWasdiTomcatWasdiWebServerBuildTargetFileGroup }} ./dataToCopy/conf_server.xml {{ sWasdiTomcatWasdiWebServerRootDirectoryPath }}/{{ sWasdiTomcatWasdiWebServerVersion }}/conf/server.xml
COPY --chown={{ sWasdiTomcatWasdiWebServerBuildTargetFileOwner }}:{{ sWasdiTomcatWasdiWebServerBuildTargetFileGroup }} ./dataToCopy/conf_tomcat-users.xml {{ sWasdiTomcatWasdiWebServerRootDirectoryPath }}/{{ sWasdiTomcatWasdiWebServerVersion }}/conf/tomcat-users.xml


# Start the container
CMD [ \
    "{{ sWasdiTomcatWasdiWebServerRootDirectoryPath }}/{{ sWasdiTomcatWasdiWebServerVersion }}/bin/catalina.sh", \
    "run" \
]
